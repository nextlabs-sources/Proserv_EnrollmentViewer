<!-- build_standalone.xml Description: . To use this script, you must update properties 	is <project root>/scripts/build_standalone.properties--><project name="build_standalone" default="all" basedir=".">	<!-- Propery files -->	<property file="${basedir}/build_standalone.properties" />	<property environment="env" />	<!-- Global properties -->	<property name="xlib_dir" location="${buildroot}/xlib" />	<property name="xlib_jar_dir" location="${xlib_dir}/jar" />	<property name="tomcat_dir" location="${buildroot}/setup/LicenseManagementTool/server/apache-tomcat-7.0.57" />	<property name="web_dir" location="${buildroot}/WebContent" />	<property name="build_dir" location="${buildroot}/build" />	<property name="classes_dir" value="${build_dir}/classes" />	<property name="package_dir" value="${build_dir}/${package_name}" />	<property name="nsis_dir" value="${buildroot}/setup/nsis" />	<property name="dist_zip_file_name" value="${package_name}-${version_str}-${version_build_short}-${build_date_long}.zip" />	<!-- Dump properties -->	<echoproperties />	<echo message="INFO: Dump properties completed" />	<!-- Sanity checks -->	<fail message="buildroot is not set" unless="buildroot" />	<fail message="buildroot is empty">		<condition>			<equals arg1="${buildroot}" arg2="" trim="true" />		</condition>	</fail>	<available file="${buildroot}" type="dir" property="local.buildroot_exists" />	<fail message="buildroot directory does not exist - ${buildroot}" unless="local.buildroot_exists" />	<echo message="INFO: Sanity check completed (no error)" />	<path id="compile.classpath">		<fileset dir="${xlib_jar_dir}">			<include name="*.jar" />		</fileset>		<fileset dir="${tomcat_dir}/lib">			<include name="*.jar" />		</fileset>	</path>	<!-- Global tasks -->	<tstamp>		<format property="local.now" pattern="EEE, d MMM yyyy HH:mm:ss Z" />	</tstamp>	<echo message="version_str = ${version_str}" />	<echo message="time = ${local.now}" />	<!-- Targets -->	<target name="all" description="Default for all" depends="clean, compile, package" />	<target name="clean" description="Delete built war" depends="">		<delete dir="${build_dir}" />		<delete>			<fileset dir="${buildroot}/setup" includes="*.exe" />		</delete>	</target>	<target name="compile" description="Compile the project" depends="clean">		<mkdir dir="${build_dir}" />		<mkdir dir="${classes_dir}" />		<javac srcdir="${buildroot}/src" destdir="${classes_dir}">			<classpath refid="compile.classpath" />			<include name="**/*.java" />			<!--exclude name="**/Test*.java" / -->		</javac>				<copy todir="${web_dir}/WEB-INF/lib" overwrite="true">			<fileset dir="${xlib_jar_dir}" />		</copy>		<war destfile="${build_dir}/LicenseManagementTool.war" webxml="${web_dir}/WEB-INF/web.xml">			<manifest>				<attribute name="Java-Version" value="${java.version}" />				<attribute name="Implementation-Vendor" value="NextLabs, Inc." />				<attribute name="Implementation-Title" value="${product_name}" />				<attribute name="Implementation-Version" value="${version_str} (${build_number})" />				<attribute name="Implementation-Time" value="${local.now}" />			</manifest>			<fileset dir="${web_dir}">				<exclude name="*.jar" />			</fileset>			<lib dir="${xlib_jar_dir}" />			<classes dir="${classes_dir}" />		</war>	</target>	<target name="package" description="build installer">		<copy todir="${buildroot}/setup/LicenseManagementTool/properties" overwrite="true">			<fileset dir="${buildroot}/conf" />		</copy>		<copy file="${buildroot}/build/LicenseManagementTool.war" tofile="${buildroot}/setup/LicenseManagementTool/server/apache-tomcat-7.0.57/webapps/LicenseManagementTool.war" overwrite="true" />		<exec executable="${nsis_dir}/makensis.exe" failonerror="true">			<arg value="/DDIRECTORY=${buildroot}/setup/LicenseManagementTool" />			<arg value="${buildroot}/scripts/LicenseManagementTool.nsi" />		</exec>	</target></project>